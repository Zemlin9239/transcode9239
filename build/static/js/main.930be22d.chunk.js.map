{"version":3,"sources":["App.js","index.js"],"names":["inputType","formatType","quality","audio","fps","VideoObjects","state","isOpen","handleClickView","setState","className","this","props","list","name","status","onClick","type","React","Component","ViewVideoProps","bitrate","TranscodeList","readyList","map","number","key","ProgressBars","variant","percent","ProgressBar","now","label","toString","Indicators","NewTranscode","inputState","qualityState","audioState","fpsState","formatState","handleInputChange","event","target","value","handleQualityChange","handleAudioChange","handleFpsChange","handleFormatChange","onChange","ShowNewTranscodeParamsButton","handleShowParamsClick","ShowNewTranscodeParams","App","style","marginTop","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.930be22d.chunk.js","sourcesContent":["import React from 'react'\r\nimport 'react-bootstrap/dist/react-bootstrap'\r\nimport {ProgressBar} from \"react-bootstrap\";\r\nimport 'bootstrap/dist/css/bootstrap.css'\r\nimport header from './App.css'\r\n\r\nvar inputType = \"File\";\r\nvar formatType = \".mp4\";\r\nvar quality = \"1920*1080\"\r\nvar audio = \"AAC 128kbps\"\r\nvar fps = \"60 fps\"\r\n\r\nclass VideoObjects extends React.Component {\r\n\r\n    state = {\r\n        isOpen: false\r\n    }\r\n\r\n    render() {\r\n\r\n        return (\r\n            <div className=\"container\">\r\n                <div className=\"row border m-3\">\r\n                    <div className=\"col \">\r\n                        <h6>{this.props.list.name}</h6>\r\n                    </div>\r\n                    <div className=\"col \">\r\n                        <h6>{this.props.list.status}</h6>\r\n                    </div>\r\n                    <div className=\"col \">\r\n                        <button onClick={this.handleClickView} type=\"button\" className=\"btn btn-outline-primary\">View\r\n                        </button>\r\n                        {' '}\r\n                        <button type=\"button\" className=\"btn btn-outline-primary\">Pause</button>\r\n                        {' '}\r\n                        <button type=\"button\" className=\"btn btn-outline-primary\">Stop</button>\r\n                        {' '}\r\n                    </div>\r\n                </div>\r\n                <div className=\"row m-2\">\r\n                    <ViewVideoProps isOpen={this.state.isOpen} list={this.props.list}/>\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n\r\n    handleClickView = () => {\r\n        this.setState({\r\n            isOpen: !this.state.isOpen,\r\n\r\n        })\r\n    }\r\n}\r\n\r\n\r\nclass ViewVideoProps extends React.Component {\r\n    render() {\r\n        return (\r\n            this.props.isOpen && <div className=\"container\">\r\n                <div className=\"row\">\r\n                    <div className=\"col\">Quality</div>\r\n                    <div className=\"col\">Bitrate</div>\r\n                    <div className=\"col\">Audio</div>\r\n                    <div className=\"col\">FPS</div>\r\n                    <div className=\"col\">Name</div>\r\n                </div>\r\n                <div className=\"row\">\r\n                    <div className=\"col\">{this.props.list.quality}</div>\r\n                    <div className=\"col\">{this.props.list.bitrate}</div>\r\n                    <div className=\"col\">{this.props.list.audio}</div>\r\n                    <div className=\"col\">{this.props.list.fps}</div>\r\n                    <div className=\"col\">{this.props.list.name}</div>\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nclass TranscodeList extends React.Component {\r\n    render() {\r\n        var inputList = [\r\n            {quality: '1920*1080', fps: '60.000', name: 'Video1', audio: '128', bitrate: '5mbs', status: 'Running'},\r\n            {quality: '1920*1080', fps: '50.000', name: 'Video2', audio: '128', bitrate: '4.8mbs', status: 'Pause'},\r\n            {quality: '1920*1080', fps: '30.000', name: 'Video3', audio: '128', bitrate: '4.5mbs', status: 'Stop'},\r\n            {quality: '1920*1080', fps: '25.000', name: 'Video4', audio: '128', bitrate: '4mbs', status: 'Running'}\r\n\r\n\r\n        ]\r\n        var readyList = inputList.map((number) => <VideoObjects key={number.name} list={number}>{number}</VideoObjects>)\r\n        return (\r\n            <div className=\"card\">\r\n                <div className=\"card-title\">\r\n                    <h3>Transcode List</h3>\r\n                </div>\r\n                <div className=\"card-body\">\r\n                    <ul>\r\n                        {readyList}\r\n                    </ul>\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nclass ProgressBars extends React.Component {\r\n    render() {\r\n        var variant = \"\"\r\n        if (this.props.percent < 50) variant = \"success\"\r\n        else if ((this.props.percent >= 50) && (this.props.percent < 80)) variant = \"warning\"\r\n        else if (this.props.percent >= 80) variant = \"danger\"\r\n        return (\r\n            <ProgressBar>\r\n                <ProgressBar variant={variant} now={this.props.percent} label={this.props.percent.toString() + '%'}/>\r\n            </ProgressBar>\r\n        )\r\n    }\r\n}\r\n\r\nclass Indicators extends React.Component {\r\n    render() {\r\n        let CPUnow = 26;\r\n        let GPUnow = 51;\r\n        let Discnow = 81;\r\n        return (\r\n            <div className=\"container\">\r\n                <div className=\"row\">\r\n                    <div className=\"col\">\r\n                        <h5>CPU</h5>\r\n                        <ProgressBars percent={CPUnow}/>\r\n                    </div>\r\n                    <div className=\"col\">\r\n                        <h5>GPU</h5>\r\n                        <ProgressBars percent={GPUnow}/>\r\n                    </div>\r\n                    <div className=\"col\">\r\n                        <h5>Disc</h5>\r\n                        <ProgressBars percent={Discnow}/>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n\r\n        )\r\n    }\r\n}\r\n\r\nclass NewTranscode extends React.Component {\r\n    state = {\r\n        inputState: \"File\",\r\n        qualityState: \"1920*1080\",\r\n        audioState: \"AAC 128kbps\",\r\n        fpsState: \"60 fps\",\r\n        formatState: \".mp4\"\r\n    }\r\n\r\n    render() {\r\n        var fileFormatType = [\".mp4\", \".ts\"]\r\n        var networkFormatType = [\"udp\", \"rtp\"]\r\n        var readyList = null\r\n        if (inputType === \"File\") {\r\n            readyList = fileFormatType.map((number) => <option value={number}>{number}</option>)\r\n        }\r\n        else if (inputType === \"Network\"){\r\n            readyList = networkFormatType.map((number) => <option value={number}>{number}</option>)\r\n        }\r\n\r\n        return (\r\n            <div>\r\n                <h3>New Transcode</h3>\r\n                <select value={this.state.inputState} onChange={this.handleInputChange}>\r\n                    <option value=\"File\">File</option>\r\n                    <option value=\"Network\">Network</option>\r\n                </select>\r\n                <select value={this.state.formatState} onChange={this.handleFormatChange}>\r\n                    {readyList}\r\n                </select>\r\n                <select value={this.state.qualityState} onChange={this.handleQualityChange}>\r\n                    <option value=\"1920*1080\">1920*1080</option>\r\n                    <option value=\"1280*720\">1280*720</option>\r\n                    <option value=\"854*480\">854*480</option>\r\n                    <option value=\"640*360\">640*360</option>\r\n                    <option value=\"427*240\">427*240</option>\r\n                    <option value=\"256*144\">256*144</option>\r\n                </select>\r\n                <select value={this.state.audioState} onChange={this.handleAudioChange}>\r\n                    <option value=\"AAC 128kbps\">AAC 128kbps</option>\r\n                </select>\r\n                <select value={this.state.fpsState} onChange={this.handleFpsChange}>\r\n                    <option value=\"60 fps\">60 fps</option>\r\n                    <option value=\"50 fps\">50 fps</option>\r\n                    <option value=\"30 fps\">30 fps</option>\r\n                    <option value=\"25 fps\">25 fps</option>\r\n                </select>\r\n                <div>\r\n                    <ShowNewTranscodeParamsButton/>\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n\r\n    handleInputChange = (event) => {\r\n        inputType = event.target.value\r\n        this.setState({\r\n            inputState: event.target.value\r\n        })\r\n    }\r\n    handleQualityChange = (event) => {\r\n        quality = event.target.value\r\n        this.setState({\r\n            qualityState: event.target.value\r\n        })\r\n    }\r\n    handleAudioChange = (event) => {\r\n        audio = event.target.value\r\n        this.setState({\r\n            audioState: event.target.value\r\n        })\r\n    }\r\n    handleFpsChange = (event) => {\r\n        fps = event.target.value\r\n        this.setState({\r\n            fpsState: event.target.value\r\n        })\r\n    }\r\n    handleFormatChange = (event) => {\r\n        formatType = event.target.value\r\n        this.setState({\r\n            formatState : event.target.value\r\n        })\r\n    }\r\n}\r\n\r\nclass ShowNewTranscodeParamsButton extends React.Component{\r\n    state = {\r\n        isOpen : false\r\n    }\r\n    render() {\r\n        return(\r\n            <div>\r\n                <button onClick={this.handleShowParamsClick} type=\"button\" className=\"btn btn-outline-primary\">Show params</button>\r\n                <ShowNewTranscodeParams isOpen = {this.state.isOpen}/>\r\n            </div>\r\n    )\r\n    }\r\n    handleShowParamsClick = () => {\r\n        this.setState({\r\n            isOpen : !this.state.isOpen\r\n        })\r\n    }\r\n}\r\n\r\nclass ShowNewTranscodeParams extends React.Component{\r\n    render() {\r\n        return(\r\n            (this.props.isOpen) && <div>\r\n                <h6>Video input: {inputType}, video format: {formatType}, quality: {quality}, audio: {audio}, fps: {fps}</h6>\r\n            </div>\r\n        )\r\n    }\r\n}\r\nclass App extends React.Component {\r\n    render() {\r\n        return (\r\n            <div>\r\n                <header className=\"header\">\r\n                    Transcode server\r\n                </header>\r\n                <div style={{marginTop: 20}}>\r\n                    <Indicators/>\r\n                </div>\r\n                <div style={{marginTop: 20}}>\r\n                    <TranscodeList/>\r\n                </div>\r\n                <div style={{marginTop: 20}}>\r\n                    <NewTranscode/>\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default App;\r\n\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport App from './App'\r\n\r\n\r\nReactDOM.render(<App/>, document.getElementById('root'))\r\n"],"sourceRoot":""}